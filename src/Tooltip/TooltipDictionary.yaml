tagInputId: "**Sample tag input tooltip**"
idforexpressioninput: Here's an [**important** anchor link](#example)
jiraApprovalProject: Jira Project Key
jiraApprovalIssueType: Project Issue Type
jiraApprovalIssueKey: Jira Issue key
ONNtooltipId: Your pipeline name
specifyYourService: Harness Services represent your microservices/apps logically. You can propagate the same Service to as many stages as you need.
stageOverviewDeploymentType: Select the platform for your deployment. When you select a platform, its specific specs and settings appear.
deploymentTypeManifests: Add the configuration files that describe the desired state of your app in terms of Kubernetes API object descriptions. All files in **Manifests** must have the .yaml file extension. [Learn More](https://ngdocs.harness.io/article/ssbq0xh0hx)
deploymentTypeArtifacts: |-
    If the image location is not specified in your Deployment manifest, you can add the image location to Harness as an Artifact. 
    Next, you reference the Artifact you added to Harness in your manifest like this:
    `image: <+artifact.image>` 
    [Learn More](https://ngdocs.harness.io/article/4ifq51cp0i)
ciEditStage_name: Enter a name for the stage. [Learn more](https://ngdocs.harness.io/article/2chyf1acil)
ciEditStage_repoName: Enter the name of the Git repo containing your codebase. [Learn more](https://ngdocs.harness.io/article/8l31vtr4hi)
ciBuildStage_name: Enter a name for the stage. [Learn More](https://ngdocs.harness.io/article/2chyf1acil-add-a-stage)
dependencyBase_name: Enter a name for this Service Dependency step. [Learn More](https://ngdocs.harness.io/article/vo4sjbd09g-configure-service-dependency-step-settings)
ciRunStep_name: The Run step executes one or more commands on a container image. Enter a name for this Run step. [Learn More](https://ngdocs.harness.io/article/1i1ttvftm4-run-step-settings)
pluginStep_name: |-
    Enter a unique name for this Plugin step. 

    Plugins are Docker containers that perform predefined tasks. Plugins are configured as steps in your stage. Plugins can be used to deploy code, publish artifacts, send notifications, and more. [Learn More](https://ngdocs.harness.io/article/8r5c3yvb8k)
conditionalExecution: The stage Conditional Execution applies to all steps that do not have their own Conditional Execution. A step's Conditional Execution overrides its stage's Conditional Execution. [Learn More](https://ngdocs.harness.io/article/i36ibenkq2)
restoreCacheS3_name: |-
    Enter a name for this step.

    The [Save Cache to S3](https://ngdocs.harness.io/article/qtvjvrp9sn) step preserves files and directories between builds.

    You can restore cache using the [Restore Cache from S3](https://ngdocs.harness.io/article/zlpx6lli6d) step.
restoreCacheGcs_name: |-
    Enter a name for this step.

    The [Restore Cache from GCS](https://ngdocs.harness.io/article/e2o4sektz1) step restores files and directories that were saved using the [Save Cache to GCS](https://ngdocs.harness.io/article/11nzeuntrz) step.
savedS3Cache_name: |-
    Enter a name for this step.

    The [Save Cache to S3](https://ngdocs.harness.io/article/qtvjvrp9sn) step preserves files and directories between builds.

    You can restore cache using the [Restore Cache from S3](https://ngdocs.harness.io/article/zlpx6lli6d) step.
savedCacheGcs_name: |-
    Enter a name for this step.

    The [Restore Cache from GCS](https://ngdocs.harness.io/article/e2o4sektz1) step restores files and directories that were saved using the [Save Cache to GCS](https://ngdocs.harness.io/article/11nzeuntrz) step.
dockerHubStep_name: |-
    Enter a name for this step.

    The [Build and Push an Image to Docker Registry](https://ngdocs.harness.io/article/q6fr5bj63w) step creates a Docker image from a Dockerfile and pushes it to a Docker registry.
ciGcrStep_name: |-
    Enter a name for this step.

    The [Build and Push to GCR](https://ngdocs.harness.io/article/66ykcm0sf0) step creates a Docker image from a Dockerfile and pushes it to a GCR Docker repository.
ciEcrStep_name: |-
    Enter a name for this step.

    The [Build and Push to ECR](https://ngdocs.harness.io/article/aiqbxaef15) step creates a Docker image from a Dockerfile and pushes it to an ECR Docker repository.
jfrogArt_name: |-
    Enter a name for this step.

    The [Upload Artifacts to JFrog Artifactory](https://ngdocs.harness.io/article/gjoggc66fy) step creates a Docker image from a Dockerfile and pushes it to a JFrog Artifactory Docker repository.
conditionalExecution: |-
    Conditional Execution uses JEXL operators and expressions. [Learn More](https://commons.apache.org/proper/commons-jexl/reference/syntax.html)

     
    Examples:

     
    `<+steps.mystep.output.status> == “success”`
    `<+environment.name> != “QA”`
    
    projectsForm_name: Enter a name for the project. [Learn more](https://ngdocs.harness.io/article/36fw2u92i4-create-an-organization#step_3_create_a_project)

projectsForm_color: Select a color for the project. [Learn more](https://ngdocs.harness.io/article/36fw2u92i4-create-an-organization#step_3_create_a_project)

projectsForm_orgIdentifier: Select an org for your project. [Learn more](https://ngdocs.harness.io/article/36fw2u92i4-create-an-organization#step_3_create_a_project)

passwordStrengthForm_minNumberOfCharacters: Enter a minimum length for the passwords. [Learn more](https://ngdocs.harness.io/article/gdob5gvyco-authentication-overview#enforce_password_strength)

passwordExpirationForm_daysBeforePasswordExpire:  After how many days the password must expire? [Learn more](https://ngdocs.harness.io/article/gdob5gvyco-authentication-overview#enforce_password_expiration)

passwordExpirationForm_daysBeforeUserNotified: How many days before password expiration should the user be notified?  [Learn more](https://ngdocs.harness.io/article/gdob5gvyco-authentication-overview#enforce_password_expiration)

lockoutPolicyForm_numberOfFailedAttemptsBeforeLockout:  After how many failed logins user is locked out?  [Learn more](https://ngdocs.harness.io/article/gdob5gvyco-authentication-overview#enforce_lockout_after_failed_logins)

lockoutPolicyForm_lockOutPeriod: Enter the period for which user would be locked out.  [Learn more](https://ngdocs.harness.io/article/gdob5gvyco-authentication-overview#enforce_lockout_after_failed_logins)

samlProviderForm_displayName: Enter a name for the SAML Provider. [Learn more](https://ngdocs.harness.io/article/mlpksc7s6c-single-sign-on-saml)

samlProviderForm_groupMembershipAttr: Enter the Group Attribute Name from your SAML Provider. [Learn more](https://ngdocs.harness.io/article/mlpksc7s6c-single-sign-on-saml)

connectorDetailsStepForm_name:  Enter a name for the Secrets Manager.  [Learn more](https://ngdocs.harness.io/article/pt52h8sb6z-add-an-aws-kms-secrets-manager#step_2_overview)

awsKmsConfigForm_credType: Select a credential type for authentication. [Learn more](https://ngdocs.harness.io/article/pt52h8sb6z-add-an-aws-kms-secrets-manager#option_credential_type)

awsKmsConfigForm_accessKey: Enter your AWS Access Key ID. [Learn more](https://ngdocs.harness.io/article/pt52h8sb6z-add-an-aws-kms-secrets-manager#aws_access_key_id)

awsKmsConfigForm_secretKey: Enter the Secret Key for your AWS Access Key ID. [Learn more](https://ngdocs.harness.io/article/pt52h8sb6z-add-an-aws-kms-secrets-manager#aws_secret_access_key)

awsKmsConfigForm_awsArn: Enter the Amazon Resource Name (ARN).  [Learn more](https://ngdocs.harness.io/article/pt52h8sb6z-add-an-aws-kms-secrets-manager#option_assume_role_using_sts_on_delegate)

awsKmsConfigForm_region:  Select the AWS Region for the Secrets Manager.  [Learn more](https://ngdocs.harness.io/article/pt52h8sb6z-add-an-aws-kms-secrets-manager#region)

awsKmsConfigForm_default:  Make this your default secrets manager.  [Learn more](https://ngdocs.harness.io/article/pt52h8sb6z-add-an-aws-kms-secrets-manager#region)

azureKeyVaultForm_clientId: Enter the Application (client) ID of your Azure app.  [Learn more](https://ngdocs.harness.io/article/53jrd1cv4i-azure-key-vault#step_2_configure_secrets_manager_in_harness)

azureKeyVaultForm_tenantId: Enter the Directory (tenant) ID of the Azure App Directory.  [Learn more](https://ngdocs.harness.io/article/53jrd1cv4i-azure-key-vault#step_2_configure_secrets_manager_in_harness)

azureKeyVaultForm_subscription: Enter your Azure Subscription ID.  [Learn more](https://ngdocs.harness.io/article/53jrd1cv4i-azure-key-vault#step_2_configure_secrets_manager_in_harness)

azureKeyVaultForm_secretKey: Enter azure authentication key.  [Learn more](https://ngdocs.harness.io/article/53jrd1cv4i-azure-key-vault#step_2_configure_secrets_manager_in_harness)

azureKeyVaultForm_vaultName: Select the Vault you want to use. [Learn more](https://ngdocs.harness.io/article/53jrd1cv4i-azure-key-vault#step_2_configure_secrets_manager_in_harness)

azureKeyVaultForm_default: Make this your default secrets manager. [Learn more](https://ngdocs.harness.io/article/53jrd1cv4i-azure-key-vault#step_2_configure_secrets_manager_in_harness)

vaultConfigForm_vaultUrl: Enter the Vault URL. [Learn more](https://ngdocs.harness.io/article/s65mzbyags-add-hashicorp-vault#step_1_configure_secrets_manager)

vaultConfigForm_basePath:  Enter the Base Secret Path. [Learn more](https://ngdocs.harness.io/article/s65mzbyags-add-hashicorp-vault#step_1_configure_secrets_manager)

vaultConfigForm_accessType: Select the Authentication Type.  [Learn more](https://ngdocs.harness.io/article/s65mzbyags-add-hashicorp-vault#step_1_configure_secrets_manager)

vaultConfigForm_authToken: Enter Periodic Token.  [Learn more](https://ngdocs.harness.io/article/s65mzbyags-add-hashicorp-vault#option_token)

vaultConfigForm_appRoleId: Enter the App Role ID.  [Learn more](https://ngdocs.harness.io/article/s65mzbyags-add-hashicorp-vault#option_app_role_method)

vaultConfigForm_secretId: Enter the Secret ID. [Learn more](https://ngdocs.harness.io/article/s65mzbyags-add-hashicorp-vault#option_app_role_method)

vaultConfigForm_engineType: Select Secret Engine Type. [Learn more](https://ngdocs.harness.io/article/s65mzbyags-add-hashicorp-vault#step_2_select_secret_engine_and_version)

vaultConfigForm_secretEngineName: Enter the name of the Secret Engine. [Learn more](https://ngdocs.harness.io/article/s65mzbyags-add-hashicorp-vault#manually_configure_engine)

vaultConfigForm_secretEngineVersion: Enter the engine version. [Learn more](https://ngdocs.harness.io/article/s65mzbyags-add-hashicorp-vault#manually_configure_engine)

vaultConfigForm_renewalInterv: Enter how often Harness Delegate should reload the Vault access token. [Learn more](https://ngdocs.harness.io/article/s65mzbyags-add-hashicorp-vault#step_3_renewal_interval_minutes)

vaultConfigForm_readOnly: Select to make secrets within this vault Read-Only. [Learn more](https://ngdocs.harness.io/article/s65mzbyags-add-hashicorp-vault#step_4_read_only_vault)

vaultConfigForm_default: Make this your default secrets manager.

