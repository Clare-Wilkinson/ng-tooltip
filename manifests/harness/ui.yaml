
apiVersion: v1
data:
  API_URL: 'repl{{ ConfigOption "loadbalancer_url" }}'
  HARNESS_ENABLE_DRIFT_PLACEHOLDER: "false"
kind: ConfigMap
metadata:
  annotations:
  name: ui
---

apiVersion: v1
kind: Service
metadata:
  name: harness-ui
  labels:
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "labels" | nindent 4 }} 
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: harness-ui
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: harness-ui
  annotations:
    kubernetes.io/ingress.class: 'repl{{ ConfigOption "ingress_class_name" }}'
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "ingress_annotations" | nindent 4 }}
spec:
  rules:
    - http:
        paths:
          - backend:
              serviceName: harness-ui
              servicePort: 80
            path: /
# repl{{ if ConfigOptionEquals "scheme" "https"}}
      host: '{{repl ConfigOption "host_name" }}'
  tls:
    - hosts:
      - '{{repl ConfigOption "host_name" }}'
      secretName: harness-cert  
# repl{{ end }}             
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: harness-ui
  labels:
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "labels" | nindent 4 }}   
spec:
  progressDeadlineSeconds: 600
  replicas: repl{{ ConfigOption "ui_replica" }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: harness-ui
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: harness-ui
        kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "labels" | nindent 8 }} 
      annotations:
        license-features-hash: '{{repl (sha256sum (print (LicenseFieldValue "license") (LicenseFieldValue "feature_flag") (ConfigOption "mode") (ConfigOption "loadbalancer_url") )) }}'         
    spec:
# repl{{ if ConfigOptionEquals "mode" "production_ha"}}      
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:	
            - labelSelector:	
                matchLabels:	
                  app: harness-ui
              topologyKey: kubernetes.io/hostname
# repl{{ end }}                 
      serviceAccountName: harness-default
      containers:
      - envFrom:
        - configMapRef:
            name: ui
        image: harness/ui-signed:67500
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 101
          runAsNonRoot: true 
        name: ui
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 200Mi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 15
---